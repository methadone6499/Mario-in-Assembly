.model small
.stack 100h
.data
;04 is now for hair
;67 is skin colour
;48 for shirt
mar	db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	db 00,00,00,00,35,35,35,35,35,35,00,00,00,00,00
	db 00,00,00,35,35,35,35,35,35,35,35,35,35,00,00
	db 00,00,00,04,04,04,67,67,67,00,67,00,00,00,00
	db 00,00,04,67,04,67,67,67,67,00,67,67,67,00,00
	db 00,00,04,67,04,04,67,67,67,67,04,67,67,67,00
	db 00,00,04,04,67,67,67,67,67,04,04,04,04,00,00
	db 00,00,00,00,67,67,67,67,67,67,67,67,00,00,00
	db 00,00,00,48,48,33,48,48,48,48,00,00,00,00,00
	db 00,00,48,48,48,33,48,48,33,48,48,48,00,00,00
	db 00,48,48,48,48,33,33,33,33,48,48,48,48,00,00
	db 00,67,67,48,33,14,33,33,14,33,48,67,67,00,00
	db 00,67,67,67,33,33,33,33,33,33,67,67,67,00,00
	db 00,67,67,33,33,33,33,33,33,33,33,67,67,00,00
	db 00,00,00,33,33,33,00,00,33,33,33,00,00,00,00
	db 00,00,07,07,07,00,00,00,00,07,07,07,00,00,00
	db 00,07,07,07,07,00,00,00,00,07,07,07,07,00,00
	db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00

hurdle1 db 00,00,00,00,00,00,00,00,00,00,00,00
		db 00,48,48,48,48,48,48,48,48,48,48,00
		db 00,48,48,48,48,48,48,48,48,48,48,00
		db 00,48,48,48,48,48,48,48,48,48,48,00
		db 00,00,47,47,47,47,47,47,47,47,00,00
		db 00,00,47,47,47,47,47,47,47,47,00,00
		db 00,00,47,47,47,47,47,47,47,47,00,00
		db 00,00,47,47,47,47,47,47,47,47,00,00
		db 00,00,47,47,47,47,47,47,47,47,00,00
	
hurdle2 db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
		db 00,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,00
		db 00,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,00
		db 00,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,00
		db 00,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,00
		db 00,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00

hurdle3 db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
		db 00,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,00
		db 00,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,00
		db 00,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,00
		db 00,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,00
		db 00,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00
		db 00,00,00,00,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,00,00,00,00

flag db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
     db 00,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,05,05,00
     db 00,12,12,12,12,12,12,12,12,12,12,12,00,00,00,00,00,00,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,05,05,00
     db 00,12,12,12,12,12,12,12,12,12,00,00,43,43,43,43,00,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,05,05,00
     db 00,12,12,12,12,12,12,12,00,00,43,43,43,43,43,00,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,05,05,00
     db 00,12,12,12,12,12,12,00,00,43,43,43,43,43,00,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,05,05,00
     db 00,12,12,12,12,12,00,00,43,43,43,43,43,00,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,05,05,00
     db 00,12,12,12,12,12,00,43,43,43,43,43,43,00,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,05,05,00
     db 00,12,12,12,12,00,43,43,43,43,43,43,43,00,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,05,05,00
     db 00,12,12,12,12,00,43,43,43,43,43,43,43,00,12,12,12,12,12,12,12,12,12,00,00,12,12,12,12,12,12,12,12,05,05,00
     db 00,12,12,12,00,43,43,43,43,43,43,43,43,00,12,12,12,12,12,12,12,12,00,43,00,12,12,12,12,12,12,12,12,05,05,00
     db 00,12,12,12,00,43,43,43,43,43,43,43,43,00,12,12,12,12,12,12,00,00,43,00,12,12,12,12,12,12,12,12,12,05,05,00
     db 00,12,12,00,43,43,43,43,43,43,00,00,43,00,12,12,12,12,12,00,43,43,43,00,12,12,12,00,12,12,12,12,12,05,05,00
     db 00,12,12,00,43,43,43,43,43,00,00,00,00,43,00,00,00,00,00,43,43,43,00,12,12,12,12,00,12,12,12,12,12,05,05,00
     db 00,12,12,00,43,43,00,43,43,00,00,15,00,43,43,43,43,43,43,43,43,00,12,12,12,12,00,43,00,12,12,12,12,05,05,00
     db 00,12,12,00,43,00,15,00,43,43,00,00,00,43,43,43,43,43,43,43,00,12,12,12,12,12,00,43,00,12,12,12,12,05,05,00
     db 00,12,12,00,43,00,00,15,00,43,43,43,43,43,43,00,43,43,43,00,12,12,12,12,12,00,43,43,00,12,12,12,12,05,05,00
     db 00,12,12,00,43,43,00,15,15,00,43,43,43,43,00,43,43,43,00,00,12,12,12,00,00,43,43,43,00,12,12,12,12,05,05,00
     db 00,12,12,12,00,43,00,41,15,15,00,00,00,43,43,00,00,00,00,15,00,00,00,43,43,43,43,00,00,12,12,12,12,05,05,00
     db 00,12,12,12,00,43,41,41,41,15,00,15,15,00,00,00,00,15,00,15,00,15,00,43,43,43,00,00,12,12,12,12,12,05,05,00
     db 00,12,12,12,00,43,41,41,41,41,00,00,15,15,15,00,15,15,00,00,15,00,43,43,43,43,00,12,12,12,12,12,12,05,05,00
     db 00,12,12,12,12,00,41,41,15,15,00,00,41,41,41,00,00,00,00,15,15,00,43,43,43,00,00,12,12,12,12,12,12,05,05,00
     db	00,12,12,12,12,12,00,41,00,15,00,15,41,41,41,00,15,15,00,15,00,43,43,43,43,00,12,12,12,12,12,12,12,05,05,00
     db 00,12,12,12,12,12,12,41,43,00,41,15,15,41,15,00,15,15,00,00,43,43,43,43,00,12,12,12,12,12,12,12,12,05,05,00
     db 00,12,12,12,12,12,12,41,00,43,41,00,15,41,15,00,15,15,00,43,43,43,00,00,12,12,12,12,12,12,12,12,12,05,05,00
     db 00,12,12,12,12,12,12,41,12,00,41,43,00,00,41,00,00,00,43,43,43,00,00,12,12,12,12,12,12,12,12,12,12,05,05,00
     db 00,12,12,12,12,12,12,12,12,12,41,00,43,43,41,43,43,43,00,00,00,00,12,12,12,12,12,12,12,12,12,12,12,05,05,00
     db 00,12,12,12,12,12,12,12,12,12,12,12,00,00,41,00,00,00,00,12,12,12,12,12,12,12,12,12,12,12,12,12,12,05,05,00
     db 00,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00    
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
     db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,00
;Enemies for lvl2
Enemy1 db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
		db 00,00,00,00,00,00,00,66,66,66,66,00,00,00,00,00,00,00
		db 00,00,00,00,00,00,66,66,66,66,66,66,00,00,00,00,00,00
		db 00,00,00,00,00,66,66,66,66,66,66,66,66,00,00,00,00,00
		db 00,00,00,00,66,66,66,66,66,66,66,66,66,66,00,00,00,00
		db 00,00,00,66,00,00,66,66,66,66,66,66,00,00,66,00,00,00
		db 00,00,66,66,66,15,00,66,66,66,66,00,15,66,66,66,00,00
		db 00,00,66,66,66,15,00,00,00,00,00,00,15,66,66,66,00,00
		db 00,66,66,66,66,15,00,15,66,66,15,00,15,66,66,66,66,00
		db 00,66,66,66,66,15,15,15,66,66,15,15,15,66,66,66,66,00
		db 00,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,00
		db 00,00,66,66,66,66,14,14,14,14,14,14,66,66,66,66,00,00
		db 00,00,00,00,00,14,14,14,14,14,14,14,14,00,00,00,00,00
		db 00,00,00,40,40,14,14,14,14,14,14,14,14,40,40,00,00,00
		db 00,00,40,40,40,40,40,14,14,14,14,40,40,40,40,40,00,00
		db 00,00,40,40,40,40,40,40,00,00,40,40,40,40,40,40,00,00
		db 00,00,00,40,40,40,40,40,00,00,40,40,40,40,40,00,00,00

Enemy2 db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
		db 00,00,00,00,00,00,00,66,66,66,66,00,00,00,00,00,00,00
		db 00,00,00,00,00,00,66,66,66,66,66,66,00,00,00,00,00,00
		db 00,00,00,00,00,66,66,66,66,66,66,66,66,00,00,00,00,00
		db 00,00,00,00,66,66,66,66,66,66,66,66,66,66,00,00,00,00
		db 00,00,00,66,00,00,66,66,66,66,66,66,00,00,66,00,00,00
		db 00,00,66,66,66,15,00,66,66,66,66,00,15,66,66,66,00,00
		db 00,00,66,66,66,15,00,00,00,00,00,00,15,66,66,66,00,00
		db 00,66,66,66,66,15,00,15,66,66,15,00,15,66,66,66,66,00
		db 00,66,66,66,66,15,15,15,66,66,15,15,15,66,66,66,66,00
		db 00,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,00
		db 00,00,66,66,66,66,14,14,14,14,14,14,66,66,66,66,00,00
		db 00,00,00,00,00,14,14,14,14,14,14,14,14,00,00,00,00,00
		db 00,00,00,40,40,14,14,14,14,14,14,14,14,40,40,00,00,00
		db 00,00,40,40,40,40,40,14,14,14,14,40,40,40,40,40,00,00
		db 00,00,40,40,40,40,40,40,00,00,40,40,40,40,40,40,00,00
		db 00,00,00,40,40,40,40,40,00,00,40,40,40,40,40,00,00,00

;monster
notbowser db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
		  db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	      db 00,00,00,00,00,00,06,06,00,00,02,02,04,04,04,04,02,02,00,00,06,06,00,00,00,00,00,00,00,00
		  db 00,00,00,00,00,00,06,06,00,00,02,02,04,04,04,04,02,02,00,00,06,06,00,00,00,00,00,00,00,00
		  db 00,00,00,00,00,00,06,06,06,06,02,02,04,04,04,04,02,02,06,06,06,06,00,00,00,00,00,00,00,00
		  db 00,00,15,00,00,00,06,06,06,06,02,02,04,04,04,04,02,02,06,06,06,06,00,00,00,00,00,00,00,00
		  db 00,00,15,00,15,00,06,06,06,06,02,02,04,04,04,04,02,02,06,06,06,06,00,15,00,15,00,00,00,00
		  db 00,00,14,14,14,14,00,00,04,04,02,02,02,02,02,02,02,02,04,04,00,00,14,14,14,14,00,00,00,00
		  db 00,00,14,14,14,14,00,00,04,04,15,15,15,02,02,02,15,15,04,04,00,00,14,14,14,14,00,00,00,00
		  db 00,00,14,14,14,14,00,00,15,15,15,15,15,15,15,15,15,15,15,15,00,00,14,14,14,14,00,00,00,00
		  db 00,00,00,14,14,00,00,00,15,15,15,15,15,15,15,15,15,15,15,15,00,00,00,14,14,00,00,00,00,00
		  db 00,00,00,14,14,14,14,14,15,15,15,04,04,15,15,04,04,15,15,15,14,14,14,14,14,00,00,00,00,00
		  db 00,00,00,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,14,14,14,14,14,00,00,00,00,00
		  db 00,00,00,00,00,14,14,14,15,15,15,15,15,04,04,04,15,15,15,15,14,14,14,00,00,00,00,00,00,00
		  db 00,00,00,00,00,00,00,00,15,15,15,15,15,15,04,15,15,15,15,15,00,00,00,00,00,00,00,00,00,00
		  db 00,00,00,00,00,00,00,00,15,15,15,15,15,15,15,15,15,15,15,15,00,00,00,00,00,00,00,00,00,00
		  db 00,00,00,00,00,00,00,00,15,15,15,15,15,15,15,15,15,15,15,15,00,00,00,00,00,00,00,00,00,00
		  db 00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00
		  db 00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00
		  db 00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00
		  db 00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00
		  db 00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00
		  db 00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00
		  db 00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00
		  db 00,00,00,00,00,00,14,14,14,14,14,14,14,00,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00
		  db 00,00,00,00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00
		  db 00,00,00,00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00
		  db 00,00,00,00,00,00,15,15,00,15,15,00,15,15,15,15,00,15,15,00,15,15,00,00,00,00,00,00,00,00
		  db 00,00,00,00,00,00,00,15,00,00,15,00,00,15,00,15,00,00,15,00,00,15,00,00,00,00,00,00,00,00
		  db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00

;the object the monster will throw at mario
object db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	   db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	   db 00,00,00,00,04,04,04,04,04,04,04,00,00,00,00
	   db 00,00,00,04,04,04,04,04,04,04,04,04,00,00,00
	   db 00,00,04,04,04,04,04,04,04,04,04,04,04,00,00
	   db 00,04,04,04,04,04,04,04,04,04,04,04,04,04,00
	   db 00,04,04,04,04,04,04,04,04,04,04,04,04,04,00
	   db 00,04,04,04,04,04,04,04,04,04,04,04,04,04,00
	   db 00,04,04,04,04,04,04,04,04,04,04,04,04,04,00
	   db 00,04,04,04,04,04,04,04,04,04,04,04,04,04,00
	   db 00,00,04,04,04,04,04,04,04,04,04,04,04,00,00
	   db 00,00,04,04,04,04,04,04,04,04,04,04,04,00,00
	   db 00,00,00,04,04,04,04,04,04,04,04,00,00,00,00
	   db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	   db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00

castle 	 db 00,00,00,41,00,00,00,00,00,00,00,00,00,00,00,00,00,41,00,00,00,00,00,00,00,00,00,00,00,00,00,00,41,00,00,00
		 db 00,00,00,41,41,00,00,00,00,00,00,00,00,00,00,00,00,41,41,00,00,00,00,00,00,00,00,00,00,00,00,00,41,41,00,00
		 db 00,00,00,41,41,41,00,00,00,00,00,00,00,00,00,00,00,41,41,41,00,00,00,00,00,00,00,00,00,00,00,00,41,41,41,00
		 db 00,00,00,41,41,00,00,00,00,00,00,00,00,00,00,00,00,41,41,00,00,00,00,00,00,00,00,00,00,00,00,00,41,41,00,00
		 db 00,00,00,41,00,00,00,00,00,00,00,00,00,00,00,00,00,41,41,00,00,00,00,00,00,00,00,00,00,00,00,00,41,00,00,00
		 db 00,00,00,41,00,00,00,00,00,00,00,00,00,00,00,00,00,41,00,00,00,00,00,00,00,00,00,00,00,00,00,00,41,00,00,00
		 db 00,00,00,41,00,00,00,00,00,00,00,00,00,00,00,00,00,41,00,00,00,00,00,00,00,00,00,00,00,00,00,00,41,00,00,00
		 db 00,00,00,41,00,00,00,00,00,00,00,00,00,00,00,00,00,41,00,00,00,00,00,00,00,00,00,00,00,00,00,00,41,00,00,00
		 db 00,00,00,41,00,00,00,00,00,00,00,00,00,00,00,00,00,41,00,00,00,00,00,00,00,00,00,00,00,00,00,00,41,00,00,00
		 db 00,00,00,41,00,00,00,00,00,00,00,00,00,00,00,00,00,41,00,00,00,00,00,00,00,00,00,00,00,00,00,00,41,00,00,00
		 db 00,00,41,41,41,00,00,00,00,00,00,00,00,00,00,00,41,41,41,00,00,00,00,00,00,00,00,00,00,00,00,41,41,41,00,00
		 db 00,41,41,41,41,41,00,00,00,00,00,00,00,00,00,41,41,41,41,41,00,00,00,00,00,00,00,00,00,00,41,41,41,41,41,00
		 db 41,41,41,41,41,41,41,00,00,00,00,00,00,00,41,41,41,41,41,41,41,00,00,00,00,00,00,00,00,41,41,41,41,41,41,41
		 db 00,08,08,08,08,08,00,00,00,00,00,00,00,00,00,08,08,08,08,08,00,00,00,00,00,00,00,00,00,00,08,08,08,08,08,00
		 db 00,08,08,08,08,08,00,00,00,00,00,00,00,00,00,08,08,08,08,08,00,00,00,00,00,00,00,00,00,00,08,08,08,08,08,00
		 db 00,08,08,08,08,08,00,00,00,00,00,00,00,00,00,08,08,08,08,08,00,00,00,00,00,00,00,00,00,00,08,08,08,08,08,00
		 db 00,08,08,08,08,08,00,00,00,00,00,00,00,00,00,08,08,08,08,08,00,00,00,00,00,00,00,00,00,00,08,08,08,08,08,00
		 db 00,08,08,14,08,08,00,00,00,00,00,00,00,00,00,08,08,14,08,08,00,00,00,00,00,00,00,00,00,00,08,08,14,08,08,00
		 db 00,08,14,14,14,08,00,00,00,00,00,00,00,00,00,08,14,14,14,08,00,16,00,00,00,00,00,00,00,00,08,14,14,14,08,00
		 db 00,08,14,14,14,08,00,00,00,00,00,00,00,00,00,08,14,14,14,08,00,00,00,00,00,00,00,00,00,00,08,14,14,14,08,00
		 db 00,08,14,14,14,08,00,00,00,00,00,00,00,00,00,08,14,14,14,08,16,00,00,00,00,00,00,00,00,00,08,14,14,14,08,00
		 db	00,08,14,14,14,08,00,00,00,00,00,00,00,00,00,08,14,14,14,08,00,00,00,00,00,00,00,00,00,00,08,14,14,14,08,00
		 db 00,08,14,14,14,08,00,00,00,00,00,00,00,00,00,08,14,14,14,08,00,00,00,00,00,00,00,00,00,00,08,14,14,14,08,00
		 db 00,08,14,14,14,08,00,00,00,00,00,00,00,00,00,08,14,14,14,08,00,00,00,00,00,00,00,00,00,00,08,14,14,14,08,00
		 db 00,08,14,14,14,08,00,00,00,00,00,00,00,00,00,08,14,14,14,08,00,00,00,00,00,00,00,00,00,00,08,14,14,14,08,00
		 db 00,08,14,14,14,08,00,00,00,00,00,00,00,00,00,08,14,14,14,08,00,00,00,00,00,00,00,00,00,00,08,14,14,14,08,00
		 db 00,08,14,14,14,08,00,00,00,00,00,00,00,00,00,08,14,14,14,08,00,00,00,00,00,00,00,00,00,00,08,14,14,14,08,00
		 db 00,08,14,14,14,08,00,00,00,00,00,00,00,00,00,08,14,14,14,08,00,00,00,00,00,00,00,00,00,00,08,14,14,14,08,00
		 db 00,08,08,08,08,08,00,00,00,00,00,00,00,00,00,08,08,08,08,08,00,00,00,00,00,00,00,00,00,00,08,08,08,08,08,00
		 db 00,08,08,08,08,08,00,00,00,00,00,00,00,00,00,08,08,08,08,08,00,00,00,00,00,00,00,00,00,00,08,08,08,08,08,00
		 db 00,08,08,08,08,08,00,00,00,00,00,00,00,00,00,08,08,08,08,08,00,00,00,00,00,00,00,00,00,00,08,08,08,08,08,00
		 db 00,08,08,08,08,08,00,00,00,00,00,00,00,00,00,08,08,08,08,08,00,00,00,00,00,00,00,00,00,00,08,08,08,08,08,00
		 db 00,08,08,08,08,08,00,00,00,00,00,00,00,00,00,08,08,08,08,08,00,00,00,00,00,00,00,00,00,00,08,08,08,08,08,00
		 db 00,08,08,08,08,08,00,00,00,00,00,00,00,00,00,08,08,08,08,08,00,00,00,00,00,00,00,00,00,00,08,08,08,08,08,00
		 db 00,08,08,08,08,08,00,00,00,00,00,00,00,00,00,08,08,08,08,08,00,00,00,00,00,00,00,00,00,00,08,08,08,08,08,00
		 db 00,08,08,08,08,08,00,00,00,08,08,08,00,00,00,08,08,08,08,08,00,00,00,08,08,08,08,00,00,00,08,08,08,08,08,00
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,04,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,04,04,04,04,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,04,04,04,04,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,04,04,04,04,04,04,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,04,04,04,04,04,04,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,04,04,04,04,04,04,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,04,04,04,04,04,04,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,04,04,04,04,04,04,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,04,04,04,04,04,04,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,04,04,04,04,04,04,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,04,04,04,04,04,04,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,04,04,04,04,04,04,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,04,04,04,04,04,04,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,04,04,04,04,04,04,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,04,04,04,04,04,04,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,04,04,04,04,04,04,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,04,04,04,04,04,04,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,04,04,04,04,04,04,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,04,04,04,04,04,04,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,04,04,04,04,04,04,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08
		 db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,04,04,04,04,04,04,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08

;bullet coordinate
	bulletxaxis word 50
	bulletyaxis word 70
	bulletshot db ?

;notbowsers coordinates
	notbowserxaxis word 50
	notbowseryaxis word 50
	notbowserflag1 db ?
	nowbowserflag2 db ?

;mario's coordinates
	xaxis word 10
	yaxis word 150

;ground's coordinates
	gxaxis word 0
	gyaxis word 170

;for ascii keys
	checkkey byte ?

;Enemys coordinates
	Enemy1x word 75
	Enemy1y word 153
	Enemy2x word 165
	Enemy2y word 153

;hurdles coordinates
	h1x word 60
	h1y word 160
	h2x word 140
	h2y word 150
	h3x word 220
	h3y word 135

;flags coordinates
	flagx word 280
	flagy word 50

;for arrow keys
	forscancode byte ?
	jumpcheck byte ?
;Enemy flags to move it left and right
	Enemyflag1 byte ?
	Enemyflag2 byte ?
	checkcollision byte ?

;count to count lives and level
	lifecount db 3
	levelcount db 49

;msgs to show 
	msg1 byte 13,10,"SUPER MARIO                   LIVES:",'$'
	msg2 byte 13,10,"                              LEVEL:",'$'

;flag to display castle
	checkcastle db 0
;castle coordinates
	cas1x word 283
	cas1y word 110
	str1 db "ENTER PLAYER NAME:$"
	arr db 30 dup('$')
.code

main proc
mov ax,@data
mov ds,ax


mov ah,0
mov al,13h
int 10h
;change background color
MOV AH, 06h
MOV AL, 0
MOV CX, 0
MOV DH, 80
MOV DL, 80
MOV BH, 04h        ;red     
INT 10h

call screen1 

;new line code
mov ah,02
mov dl,10
int 21h
call textdelay

call Mustafa

;new line code
mov ah,02
mov dl,10
int 21h
call textdelay

call Awais

;new line code
mov ah,02
mov dl,10
int 21h
call textdelay

call Faria

call textdelay2
call press

call LVL1
inc checkcastle
call LVL2
inc checkcastle
call LVL3
main endp

exit:
mov ah,4ch
int 21h

;-----------------displaying strings---------
displaystring proc
;displaying message 'Super Mario'
	mov dx,offset msg1
	mov ah,09
	int 21h
	;displaying lives
	mov cx,0
	mov cl,lifecount
	life:
	mov ah,02
	mov dl,3
	int 21h
	loop life	


;displaying levelcount
	mov dx,offset msg2
	mov ah,09
	int 21h
	mov dl,levelcount
	mov ah,02
	int 21h

ret
displaystring endp

;-----------------displayingstring---------------
;---------------clearscreen-------------------
clearscreen proc
mov ah,0
mov al,13h
int 10h
ret
clearscreen endp

;---------------clearscreen-------------------
;-----------------printstaticobjects---------------------
printstaticobjects proc
call clearscreen
call displaystring
mov dx,gyaxis
mov ah,0ch
printground:
	mov cx,gxaxis
	printcol1:
		mov al,65
		int 10h
		inc cx
		cmp cx,400
		jne printcol1
		inc dx
		cmp dx,200
		jne printground
.if(checkcastle<2)
mov si,offset flag
;mov num of rows of flag array
mov bx,120
mov ah,0ch
mov dx,flagy
printflag:
	mov cx,flagx
	push bx
	;mov num of col of hurdle3 array
	mov bx,36
	prirow4:
		mov al,[si]
		int 10h
		inc si
		inc cx
		dec bx
		cmp bx,0
		;the above part prints each line of hurdle3
		jne prirow4
		inc dx
		pop bx
		dec bx
		cmp bx,0
		jne printflag
.endif
.if(checkcastle==2)
mov si,offset castle
mov bx,62
mov ah,0ch
mov dx,cas1y
printthecastle:
	mov cx,cas1x
	push bx
	mov bx,36
	printcastlerow:
		mov al,[si]
		int 10h
		inc si
		inc cx
		dec bx
		cmp bx,0
		jne printcastlerow
		inc dx
		pop bx
		dec bx
		cmp bx,0
		jne printthecastle
.endif

mov si,offset hurdle3
;mov num of rows of hurdle3 array
mov bx,35
mov ah,0ch

mov dx,h3y
printhurdle3:
	mov cx,h3x
	push bx
	;mov num of col of hurdle3 array
	mov bx,24
	prirow3:
		mov al,[si]
		int 10h
		inc si
		inc cx
		dec bx
		cmp bx,0
		;the above part prints each line of hurdle3
		jne prirow3
		inc dx
		pop bx
		dec bx
		cmp bx,0
		jne printhurdle3

mov si,offset hurdle2
;mov num of rows of hurdle2 array
mov bx,20
mov ah,0ch

mov dx,h2y
printhurdle2:
	mov cx,h2x
	push bx
	;mov num of col of hurdle2 array
	mov bx,24
	prirow2:
		mov al,[si]
		int 10h
		inc si
		inc cx
		dec bx
		cmp bx,0
		;the above part prints each line of hurdle2
		jne prirow2
		inc dx
		pop bx
		dec bx
		cmp bx,0
		jne printhurdle2

mov si,offset hurdle1
;mov num of rows of hurdle2 array
mov bx,9
mov ah,0ch

mov dx,h1y
printhurdle1:
	mov cx,h1x
	push bx
	;mov num of column of hurdle1 array
	mov bx,12
	prirow1:
		mov al,[si]
		int 10h
		inc si
		inc cx
		dec bx
		cmp bx,0
		;the above part prints each line of hurdle1
		jne prirow1
		inc dx
		pop bx
		dec bx
		cmp bx,0
		jne printhurdle1			
ret
printstaticobjects endp

;--------------------------------------------LVL1------------------------------------------
;-----------------printstaticobjects---------------------
LVL1 proc

call printstaticobjects
realprintmario:

mov si,offset mar
;move num of rows of mario array
mov bx,19
mov ah,0ch

mov dx,yaxis
printmario:
	mov cx,xaxis
	push bx
	;mov num of col of mario array
	mov bx,15
	prirow:
		mov al,[si]
		int 10h
		inc si
		inc cx
		dec bx
		cmp bx,0
		;the above part prints each line of mario
		jne prirow
		inc dx
		pop bx
		dec bx
		cmp bx,0
		jne printmario


mov ah, 01h
int 16h
mov checkkey,al
mov forscancode,ah
;ascii for escape
;scancode for arrow keys because no ascii for arrow keys
.if(checkkey==27)
jmp exit
.endif
.if(forscancode==4Dh)
add xaxis,1
.endif
.if(forscancode==4Bh)
sub xaxis,1
.endif
;first this if statement checks if up arrow key is pressed
;jumpcheck is set to 1
.if(forscancode==48h)
mov jumpcheck,1
.endif
;jumpcheck is set to 1 and it decreases y axis to make mario go up
.if(jumpcheck==1)
dec yaxis
.endif
;once mario has jumped a certain height jumpcheck is set again
.if(yaxis==90)
mov jumpcheck,2
.endif
;now mario will start to decrease in height
.if(jumpcheck==2)
inc yaxis
.endif
;once mario is back on the ground jumpcheck is set to 0
.if(yaxis==150) ;|| ((xaxis>=61 && xaxis<=71) || (yaxis==160)))
mov jumpcheck,0
.endif
.if(xaxis==300)
inc levelcount
jmp gotolvl2
.endif
;collision detection
;h1x word 60
;h1y word 160
;h2x word 140
;h2y word 150
;h3x word 220
;h3y word 130
.if(xaxis==47 && yaxis==150)
dec xaxis
.endif
.if(xaxis==72&& yaxis ==150)
inc xaxis
.endif

;proper collision detection for hurdle3-------------------------
;to make mario stand on hurdle we'll put jumpcheck to 0 so that his coordinates y axis doesn't increase or decrease
.if((xaxis>=207 && xaxis<=240) && yaxis==115 )
mov jumpcheck,0
.endif
.if(xaxis==207 && (yaxis<=150 && yaxis>=115))
dec xaxis
.endif
.if(xaxis==240 && (yaxis<=150 && yaxis>=115))
inc xaxis
.endif
;once mario has gone out of the hurdles range mario will fall
.if((xaxis>240&&xaxis<243) && yaxis==115)
mov jumpcheck,2
.endif

;-------------------hurdle3-------------------------------------
;-------------------hurdle2-------------------------------------
.if(xaxis==127 && (yaxis<=150 && yaxis>=130))
dec xaxis
.endif
.if(xaxis==164 && (yaxis<=150 && yaxis>=130))
inc xaxis
.endif
.if((xaxis>=127 && xaxis<=164) && yaxis==130 )
mov jumpcheck,0
.endif
.if((xaxis>164 && xaxis<166) && yaxis==130)
mov jumpcheck,2
.endif

;----------------------------------------
;clearing keyboard buffer to make him move properly
call ClearKeyBoardBuffer
;using delay cause mario was jumping too fast
call mariodelay
jmp realprintmario
gotolvl2:
mov xaxis,10
mov yaxis,150
ret
LVL1 endp

;--------------------------------------------LVL2------------------------------------------
LVL2 proc

reset:
.if(lifecount==0)
jmp exit
.endif
call printstaticobjects
realprintmario:

mov si,offset mar
;move num of rows of mario array
mov bx,19
mov ah,0ch

mov dx,yaxis
printmario:
	mov cx,xaxis
	push bx
	;mov num of col of mario array
	mov bx,15
	prirow:
		mov al,[si]
		int 10h
		inc si
		inc cx
		dec bx
		cmp bx,0
		;the above part prints each line of mario
		jne prirow
		inc dx
		pop bx
		dec bx
		cmp bx,0
		jne printmario

printtheEnemy:
	mov si,offset Enemy1
	mov bx,17
	mov ah,0ch
	mov dx,Enemy1y
	printingEnemy:
		mov cx,Enemy1x
		push bx
		mov bx,18
		printEnemyrow:
			mov al,[si]
			int 10h
			inc si
			inc cx
			dec bx
			cmp bx,0
			jne printEnemyrow
			inc dx
			pop bx
			dec bx
			cmp bx,0
			jne printingEnemy

printtheEnemy2:
	mov si,offset Enemy2
	mov bx,17
	mov ah,0ch
	mov dx,Enemy2y
	printingEnemy2:
		mov cx,Enemy2x
		push bx
		mov bx,18
		printEnemyrow2:
			mov al,[si]
			int 10h
			inc si
			inc cx
			dec bx
			cmp bx,0
			jne printEnemyrow2
			inc dx
			pop bx
			dec bx
			cmp bx,0
			jne printingEnemy2

;Enemy1x word 75
;Enemy1y word 153
;hurdles coordinates
;h1x word 60
;h1y word 160
;h2x word 140
;h2y word 150
;Enemy2x word 165
;Enemy2y word 153

;-----------------moveEnemy1-----------------
.if(Enemy1x==75)
mov Enemyflag1,1
.endif
.if(Enemyflag1==1)
inc Enemy1x
.endif
.if(Enemy1x==114)
mov Enemyflag1,2
.endif
.if(Enemyflag1==2)
dec Enemy1x
.endif

;-----------------moveEnemy2--------------------
.if(Enemy2x==165)
mov Enemyflag2,1
.endif
.if(Enemyflag2==1)
inc Enemy2x
.endif
.if(Enemy2x==185)
mov Enemyflag2,2
.endif
.if(Enemyflag2==2)
dec Enemy2x
.endif

;------------------Enemy collision detection--------------
;xaxis word 10
;yaxis word 150

mov bx,xaxis
.if(Enemy1x==bx && yaxis==150)
dec lifecount
call clearscreen
mov xaxis,10
mov yaxis,150
jmp reset
.endif

;------------------Enemy2 collision detection--------------

mov bx,xaxis
.if(Enemy2x==bx && yaxis==150)
dec lifecount
call clearscreen
mov xaxis,10
mov yaxis,150
jmp reset
.endif

;--------------------------------------------------------------
mov ah, 01h
int 16h
mov checkkey,al
mov forscancode,ah
;ascii for escape
;scancode for arrow keys because no ascii for arrow keys
.if(checkkey==27)
jmp exit
.endif
.if(forscancode==4Dh)
add xaxis,1
.endif
.if(forscancode==4Bh)
sub xaxis,1
.endif
;first this if statement checks if up arrow key is pressed
;jumpcheck is set to 1
.if(forscancode==48h)
mov jumpcheck,1
.endif
;jumpcheck is set to 1 and it decreases y axis to make mario go up
.if(jumpcheck==1)
dec yaxis
.endif
;once mario has jumped a certain height jumpcheck is set again
.if(yaxis==90)
mov jumpcheck,2
.endif
;now mario will start to decrease in height
.if(jumpcheck==2)
inc yaxis
.endif
;once mario is back on the ground jumpcheck is set to 0
.if(yaxis==150)
mov jumpcheck,0
.endif
.if(xaxis==300)
inc levelcount
jmp gotolvl3
.endif
;collision detection
.if(xaxis==47 && yaxis==150)
dec xaxis
.endif
.if(xaxis==72&& yaxis ==150)
inc xaxis
.endif

;proper collision detection for hurdle3-------------------------
;to make mario stand on hurdle we'll put jumpcheck to 0 so that his coordinates y axis doesn't increase or decrease

.if((xaxis>=207 && xaxis<=240) && yaxis==115 )
mov jumpcheck,0
.endif
.if(xaxis==207 && (yaxis<=150 && yaxis>=115))
dec xaxis
.endif
.if(xaxis==240 && (yaxis<=150 && yaxis>=115))
inc xaxis
.endif
;once mario has gone out of the hurdles range mario will fall
.if((xaxis>240&&xaxis<243) && yaxis==115)
mov jumpcheck,2
.endif

;-------------------hurdle3-------------------------------------
;-------------------hurdle2------------------------------
.if(xaxis==127 && (yaxis<=150 && yaxis>=130))
dec xaxis
.endif
.if(xaxis==164 && (yaxis<=150 && yaxis>=130))
inc xaxis
.endif
.if((xaxis>=127 && xaxis<=164) && yaxis==130 )
mov jumpcheck,0
.endif
.if((xaxis>164 && xaxis<166) && yaxis==130)
mov jumpcheck,2
.endif

;----------------------------------------
;clearing keyboard buffer to make him move properly
call ClearKeyBoardBuffer
;using delay cause mario was jumping too fast
call mariodelay
jmp realprintmario
gotolvl3:
mov xaxis,10
mov yaxis,150
call ClearKeyBoardBuffer
call clearscreen
ret
LVL2 endp

;--------------------------------------------------------------3RD LVL--------------------------------------------------------------------------
LVL3 proc
call clearscreen
reset:
.if(lifecount==0)
jmp exit
.endif

call printstaticobjects
realprintmario:

mov si,offset mar
;move num of rows of mario array
mov bx,19
mov ah,0ch

mov dx,yaxis
printmario:
	mov cx,xaxis
	push bx
	;mov num of col of mario array
	mov bx,15
	prirow:
		mov al,[si]
		int 10h
		inc si
		inc cx
		dec bx
		cmp bx,0
		;the above part prints each line of mario
		jne prirow
		inc dx
		pop bx
		dec bx
		cmp bx,0
		jne printmario

printtheEnemy:
	mov si,offset Enemy1
	mov bx,17
	mov ah,0ch
	mov dx,Enemy1y
	printingEnemy:
		mov cx,Enemy1x
		push bx
		mov bx,18
		printEnemyrow:
			mov al,[si]
			int 10h
			inc si
			inc cx
			dec bx
			cmp bx,0
			jne printEnemyrow
			inc dx
			pop bx
			dec bx
			cmp bx,0
			jne printingEnemy

printtheEnemy2:
	mov si,offset Enemy2
	mov bx,17
	mov ah,0ch
	mov dx,Enemy2y
	printingEnemy2:
		mov cx,Enemy2x
		push bx
		mov bx,18
		printEnemyrow2:
			mov al,[si]
			int 10h
			inc si
			inc cx
			dec bx
			cmp bx,0
			jne printEnemyrow2
			inc dx
			pop bx
			dec bx
			cmp bx,0
			jne printingEnemy2

mov si,offset notbowser
;move num of rows of mario array
mov bx,30
mov ah,0ch

mov dx,notbowseryaxis
printmonster:
	mov cx,notbowserxaxis
	push bx
	;mov num of col of mario array
	mov bx,30
	printnotbowser:
		mov al,[si]
		int 10h
		inc si
		inc cx
		dec bx
		cmp bx,0
		;the above part prints each line of monster
		jne printnotbowser
		inc dx
		pop bx
		dec bx
		cmp bx,0
		jne printmonster
;bulletxaxis word 50
;bulletyaxis word 50
mov si,offset object
mov bx,15
mov ah,0ch
mov dx,bulletyaxis
printbullet:
	mov cx,bulletxaxis
	push bx
	mov bx,15
	printbulletrow:
		mov al,[si]
		int 10h
		inc si
		inc cx
		dec bx
		cmp bx,0
		jne printbulletrow
		inc dx
		pop bx
		dec bx
		cmp bx,0
		jne printbullet

;Enemy1x word 75
;Enemy1y word 153
;hurdles coordinates
;h1x word 60
;h1y word 160
;h2x word 140
;h2y word 150
;Enemy2x word 165
;Enemy2y word 153

;-----------------moveEnemy1-----------------
.if(Enemy1x==75)
mov Enemyflag1,1
.endif
.if(Enemyflag1==1)
inc Enemy1x
.endif
.if(Enemy1x==114)
mov Enemyflag1,2
.endif
.if(Enemyflag1==2)
dec Enemy1x
.endif

;-----------------moveEnemy2--------------------
.if(Enemy2x==165)
mov Enemyflag2,1
.endif
.if(Enemyflag2==1)
inc Enemy2x
.endif
.if(Enemy2x==185)
mov Enemyflag2,2
.endif
.if(Enemyflag2==2)
dec Enemy2x
.endif

;-----------------move monster-------------------------
;notbowserxaxis word 50
;notbowseryaxis word 50
.if(notbowserxaxis==50)
mov notbowserflag1,1
.endif
.if(notbowserflag1==1)
inc notbowserxaxis
.endif
.if(notbowserxaxis==200)
mov notbowserflag1,3
.endif
.if(notbowserflag1==3)
dec notbowserxaxis
.endif

;------------------------------------shootbullets--------------------------
;bullet coordinate
;bulletxaxis word 50
;bulletyaxis word 50
;bulletnotshot db ? remove this
;bulletshot db ?
.if(bulletxaxis==50 || bulletxaxis==100 || bulletxaxis==150)
mov bulletshot,1
.endif
.if(bulletshot==1)
inc bulletyaxis
inc bulletyaxis
.endif
.if(bulletyaxis==140)
call printstaticobjects
mov bulletshot,2
.endif
.if(bulletshot==2)
mov ax,notbowseryaxis
add ax,30
mov bulletyaxis,ax
mov bx,notbowserxaxis
mov bulletxaxis,bx
.endif

;-----------------------bulletcollision---------------------------------
mov bx,xaxis
sub bx,10
mov ax,yaxis
mov dx,xaxis
add dx,10
.if((bulletxaxis>=bx && bulletxaxis<=dx) && bulletyaxis==ax)
dec lifecount
call clearscreen
mov xaxis,10
mov yaxis,150
jmp reset
.endif

;------------------Enemy1 collision detection--------------
;xaxis word 10
;yaxis word 150
mov bx,xaxis
.if(Enemy1x==bx && yaxis==150)
dec lifecount
call clearscreen
mov xaxis,10
mov yaxis,150
jmp reset
.endif

;------------------Enemy2 collision detection--------------
mov bx,xaxis
.if(Enemy2x==bx && yaxis==150)
dec lifecount
call clearscreen
mov xaxis,10
mov yaxis,150
jmp reset
.endif

;--------------------------------------------------------------
mov ah, 01h
int 16h
mov checkkey,al
mov forscancode,ah
;ascii for escape
;scancode for arrow keys because no ascii for arrow keys
.if(checkkey==27)
jmp exit
.endif
.if(forscancode==4Dh)
add xaxis,1
.endif
.if(forscancode==4Bh)
sub xaxis,1
.endif
;first this if statement checks if up arrow key is pressed
;jumpcheck is set to 1
.if(forscancode==48h)
mov jumpcheck,1
.endif
;jumpcheck is set to 1 and it decreases y axis to make mario go up
.if(jumpcheck==1)
dec yaxis
.endif

;once mario has jumped a certain height jumpcheck is set again
.if(yaxis==90)
mov jumpcheck,2
.endif
;now mario will start to decrease in height
.if(jumpcheck==2)
inc yaxis
.endif

;once mario is back on the ground jumpcheck is set to 0
.if(yaxis==150)
mov jumpcheck,0
.endif
.if(xaxis==280)
jmp exit
.endif
;collision detection with hurdles
;h2x word 140
;h2y word 150
;h3x word 220
;h3y word 135
.if(xaxis==47 && yaxis>=150)
dec xaxis
.endif
.if(xaxis==72&& yaxis ==150)
inc xaxis
.endif

;proper collision detection for hurdle3-------------------------
;to make mario stand on hurdle we'll put jumpcheck to 0 so that his coordinates y axis doesn't increase or decrease
.if((xaxis>=207 && xaxis<=240) && yaxis==115 )
mov jumpcheck,0
.endif
.if(xaxis==207 && (yaxis<=150 && yaxis>=115))
dec xaxis
.endif
.if(xaxis==240 && (yaxis<=150 && yaxis>=115))
inc xaxis
.endif
;once mario has gone out of the hurdles range mario will fall
.if((xaxis>240&&xaxis<243) && yaxis==115)
mov jumpcheck,2
.endif

;-------------------hurdle3-------------------------------------
;-------------------hurdle2------------------------------
.if(xaxis==127 && (yaxis<=150 && yaxis>=130))
dec xaxis
.endif
.if(xaxis==164 && (yaxis<=150 && yaxis>=130))
inc xaxis
.endif
.if((xaxis>=127 && xaxis<=164) && yaxis==130 )
mov jumpcheck,0
.endif
.if((xaxis>164 && xaxis<166) && yaxis==130)
mov jumpcheck,2
.endif

;----------------------------------------
;clearing keyboard buffer to make him move properly
call ClearKeyBoardBuffer
;using delay cause mario was jumping too fast
call mariodelay
jmp realprintmario

ret
LVL3 endp

ClearKeyBoardBuffer proc
	mov ah,0ch
	int 21h
	ret
ClearKeyBoardBuffer endp

mariodelay proc
	push ax
	push bx
	push cx
	push dx
	mov cx,1000
	delay2:
	mov bx,50  ;inc bx for more delay dec bx for less delay
	delayy1:    
	dec bx
	jnz delayy1
	loop delay2
	pop dx
	pop cx
	pop bx
	pop ax
	ret
mariodelay endp

screen1 proc
		;set cursor position
		mov dl, 15 ;col
		mov dh, 10 ;row
		mov bh,0
		mov ah,02h
		int 10h

		call textdelay
		;display characters
		mov al,'S'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al,'U'
		mov bl,14
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al,'P'
		mov bl,04
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al,'E'
		mov bl,02
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al,'R'
		mov bl,14
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, ' '
		mov bl,00
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al,'M'
		mov bl,04
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al,'A'
		mov bl,02
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al,'R'
		mov bl,14
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al,'I'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'O'
		mov bl,02
		mov bh, 0
		mov ah, 0Eh
		int 10h
		ret
screen1 endp	

;Mustafa procedure
Mustafa proc
		;set cursor  position
	    mov dl, 33 ;col
		mov dh, 120 ;row
		mov bh,0
		mov ah,02h
		int 10h

		mov al, 'M'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'U'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'S'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'T'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'A'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'F'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'A'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h

	    mov al, ' '
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		mov al, 'K'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'H'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'A'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'L'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'I'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'D'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h

		ret
Mustafa endp		

;awais procedure
Awais proc
		;set cursor  position
	    mov dl, 33 ;col
		mov dh, 250 ;row
		mov bh,0
		mov ah,02h
		int 10h

		mov al, 'M'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay

		mov al, ' '
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'A'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'W'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'A'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
	    call textdelay
		mov al, 'I'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'S'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h

	    mov al, ' '
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		mov al, 'A'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'Z'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'H'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'A'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'R'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h

		ret
Awais endp		

;faria procedure
Faria proc
		;set cursor  position
	    mov dl, 25  ;col
		mov dh, 150   ;row
		mov bh,0
		mov ah,02h
		int 10h

		mov al, 'F'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'A'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'R'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'I'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'A'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h

	    mov al, ' '
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		mov al, 'E'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'M'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'A'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h
		call textdelay
		mov al, 'N'
		mov bl,01
		mov bh, 0
		mov ah, 0Eh
		int 10h

		ret
Faria endp	

;input procedure
press proc
mov ah,00                 ;new screen
Mov al,13h
Int 10h

;change background color
MOV AH, 06h
MOV AL, 0
MOV CX, 0
MOV DH, 80
MOV DL, 80
MOV BH, 04h          ;red color      
INT 10h
    	mov dl, 10 ;col
		mov dh, 5 ;row
		mov bh,0
		mov ah,02h
		int 10h

        mov dx,offset str1
	    mov ah,09
	    int 21h

       	 mov di,0
     input:
	   mov ah,01
	   int 21h
	   mov arr[si],al
	   inc si
	   cmp al,13d
	   je inputend
	   cmp al,10d
	   je inputend
     jmp input
inputend:
ret
press endp

textdelay proc
	push ax
	push bx
	push cx
	push dx
	mov cx,1000
	delayy2:
	mov bx,200  ;inc bx for more delay dec bx for less delay
	delayyy1:    
	dec bx
	jnz delayyy1
	loop delayy2
	pop dx
	pop cx
	pop bx
	pop ax
	ret
textdelay endp

textdelay2 proc
	push ax
	push bx
	push cx
	push dx
	mov cx,1000
	delayyyy2:
	mov bx,500  ;inc bx for more delay dec bx for less delay
	delayyyy1:    
	dec bx
	jnz delayyyy1
	loop delayyyy2
	pop dx
	pop cx
	pop bx
	pop ax
	ret
textdelay2 endp
end